#!/bin/sh
#
# Slackware build script for Newt
# Copyright (C) 2006,2009,2010,2012 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: newt.SlackBuild,v 1.5 2012/10/06 13:55:52 gsotirov Exp $
#

. ../../slack-package.conf

NAME=newt
VERSION=0.52.14
BUILD=${BUILD:-1}
ARCH=${ARCH:-i486}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract source
cd $TMP
tar -xvf $CWD/$NAME-$VERSION.tar.gz || exit 3
cd $SRC
fix_source

# Apply patches
patch -p1 < $CWD/$NAME-$VERSION.diff || exit 4
patch -p1 < $CWD/$NAME-$VERSION-tutorial.diff || exit 4

CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS  \
./configure --build=$ARCH-pc-linux-gnu \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --sysconfdir=/etc \
            --localstatedir=/var \
            --mandir=/usr/man \
            --with-gpm-support || exit 5

# Build & install
make -j4 || exit 6
linuxdoc -B html tutorial.sgml || exit 7
make instroot=$PKG install || exit 8

# Prepare
bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
gzip_man $PKG
( cd $SRC; create_docs $PKG $NAME-$VERSION )
# - make tutorial
install -m 644 $SRC/tutorial*.html $PKG/usr/doc/$NAME-$VERSION
# - Install examples
install -m 755 -d $PKG/usr/doc/$NAME-$VERSION/examples
install -m 644 $SRC/peanuts.py     $PKG/usr/doc/$NAME-$VERSION/examples/peanuts.py
install -m 644 $SRC/popcorn.py     $PKG/usr/doc/$NAME-$VERSION/examples/popcorn.py

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/$NAME-$VERSION
mkdir -p $SBDIR
install -m 644 $CWD/${NAME}-${VERSION}*.diff  $SBDIR
install -m 644 $CWD/slack-desc                $SBDIR/slack-desc
install -m 644 $CWD/slack-required            $SBDIR/slack-required
install -m 644 $CWD/slack-suggests            $SBDIR/slack-suggests
install -m 644 $CWD/$NAME.SlackBuild          $SBDIR/$NAME.SlackBuild

# Assemble
cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

